# Generated by Django 2.2 on 2019-09-26 00:27

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.models
import user.tools


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email_verified', models.BooleanField(default=False, help_text='Is user email verified?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', user.models.UserModelManager()),
            ],
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(help_text='Verification code', unique=True)),
                ('date', models.DateTimeField(auto_now_add=True, help_text='Date created')),
                ('user', models.OneToOneField(help_text='Temporal user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_member', models.BooleanField(default=False, help_text='Is the user Board Member?')),
                ('level', models.CharField(choices=[('0', 'Level 0'), ('1', 'Level 1'), ('2', 'Level 2'), ('3', 'Level 3'), ('4', 'Level 4'), ('5', 'Level 5')], default='0', help_text='What is the user level?', max_length=2)),
                ('balance', models.DecimalField(decimal_places=3, default=0.0, help_text='User wallet balance.', max_digits=15)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('T', 'Transgender'), ('O', 'Other')], help_text='Gender', max_length=2)),
                ('status', models.CharField(blank=True, choices=[('M', 'Married'), ('S', 'Single'), ('E', 'Engaged'), ('D', 'Divorced'), ('O', 'Others')], help_text='Marital Status', max_length=2)),
                ('phone', models.BigIntegerField(blank=True, help_text='Mobile number', null=True)),
                ('wallet', models.CharField(blank=True, help_text='Bitcoin wallet address', max_length=60, null=True)),
                ('ref_code', models.IntegerField(default=user.tools.reference_code, editable=False, help_text='Reference code', unique=True)),
                ('avatar', models.ImageField(blank=True, help_text='Profile Picture', upload_to=user.tools.pic_path)),
                ('modified', models.DateTimeField(auto_now=True, help_text='Last modifield')),
                ('user', models.OneToOneField(help_text='More user data', on_delete=django.db.models.deletion.CASCADE, related_name='profile_data', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
